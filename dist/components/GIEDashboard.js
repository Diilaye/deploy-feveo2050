import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { User, Wallet, Package, Users, Activity, Settings, LogOut, Eye, EyeOff, Plus, Edit, Trash2, Download, Calendar, Phone, Mail, CreditCard, TrendingUp, ShoppingCart, FileText, Save, X } from 'lucide-react';
const GIEDashboard = () => {
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const [activeTab, setActiveTab] = useState('wallet');
    const [showPassword, setShowPassword] = useState(false);
    const [loginData, setLoginData] = useState({
        gieId: '',
        password: ''
    });
    // États pour les différentes sections
    const [gieInfo, setGieInfo] = useState({
        id: 'FEVEO-GIE-DK-001-2024',
        nom: 'GIE Ndèye Fatou',
        presidenteNom: 'Fatou Diop',
        region: 'Dakar',
        commune: 'Parcelles Assainies',
        dateCreation: '2024-01-15',
        nombreMembres: 25,
        statut: 'Actif'
    });
    const [walletData, setWalletData] = useState({
        solde: 2450000,
        partsInvesties: 245,
        rendement: 12.5,
        derniereTransaction: '2024-03-15',
        transactions: [
            { id: 1, date: '2024-03-15', type: 'Crédit', montant: 150000, description: 'Vente produits agricoles' },
            { id: 2, date: '2024-03-10', type: 'Débit', montant: 50000, description: 'Achat semences' },
            { id: 3, date: '2024-03-05', type: 'Crédit', montant: 200000, description: 'Rendement investissement' }
        ]
    });
    const [products, setProducts] = useState([
        { id: 1, nom: 'Tomates Bio', prix: 1500, stock: 150, categorie: 'Légumes', image: null },
        { id: 2, nom: 'Oignons', prix: 800, stock: 200, categorie: 'Légumes', image: null },
        { id: 3, nom: 'Huile d\'arachide', prix: 2500, stock: 50, categorie: 'Transformation', image: null }
    ]);
    const [activities, setActivities] = useState([
        { id: 1, titre: 'Récolte de tomates', date: '2024-03-20', statut: 'Planifiée', description: 'Récolte de la saison' },
        { id: 2, titre: 'Formation compostage', date: '2024-03-18', statut: 'Terminée', description: 'Formation sur le compostage' }
    ]);
    const [members, setMembers] = useState([
        { id: 1, nom: 'Fatou Diop', role: 'Présidente', telephone: '+221 77 123 45 67', email: 'fatou@example.com', dateAdhesion: '2024-01-15' },
        { id: 2, nom: 'Awa Ndiaye', role: 'Secrétaire', telephone: '+221 76 234 56 78', email: 'awa@example.com', dateAdhesion: '2024-01-15' }
    ]);
    // États pour les modals
    const [showAddProduct, setShowAddProduct] = useState(false);
    const [showAddActivity, setShowAddActivity] = useState(false);
    const [showAddMember, setShowAddMember] = useState(false);
    const [showStatutsForm, setShowStatutsForm] = useState(false);
    // États pour les formulaires
    const [newProduct, setNewProduct] = useState({
        nom: '', prix: '', stock: '', categorie: '', description: '', image: null
    });
    const [newActivity, setNewActivity] = useState({
        titre: '', date: '', description: '', lieu: ''
    });
    const [newMember, setNewMember] = useState({
        nom: '', prenom: '', dateNaissance: '', lieuNaissance: '', cin: '', adresse: '', telephone: '', email: '', role: 'Membre'
    });
    const [statutsData, setStatutsData] = useState({
        date: new Date().toISOString().split('T')[0],
        region: '',
        departement: '',
        arrondissement: '',
        commune: '',
        membres: Array(40).fill().map((_, i) => ({
            id: i + 1,
            prenomNom: '',
            dateNaissance: '',
            lieuNaissance: '',
            cin: '',
            adresse: '',
            signature: false
        }))
    });
    const handleLogin = (e) => {
        e.preventDefault();
        if (loginData.gieId && loginData.password) {
            setIsLoggedIn(true);
        }
    };
    const handleLogout = () => {
        setIsLoggedIn(false);
        setLoginData({ gieId: '', password: '' });
    };
    const handleAddProduct = () => {
        if (newProduct.nom && newProduct.prix && newProduct.stock) {
            setProducts([...products, {
                    id: Date.now(),
                    ...newProduct,
                    prix: parseFloat(newProduct.prix),
                    stock: parseInt(newProduct.stock)
                }]);
            setNewProduct({ nom: '', prix: '', stock: '', categorie: '', description: '', image: null });
            setShowAddProduct(false);
        }
    };
    const handleAddActivity = () => {
        if (newActivity.titre && newActivity.date) {
            setActivities([...activities, {
                    id: Date.now(),
                    ...newActivity,
                    statut: 'Planifiée'
                }]);
            setNewActivity({ titre: '', date: '', description: '', lieu: '' });
            setShowAddActivity(false);
        }
    };
    const handleAddMember = () => {
        if (newMember.nom && newMember.prenom && newMember.telephone) {
            setMembers([...members, {
                    id: Date.now(),
                    nom: `${newMember.prenom} ${newMember.nom}`,
                    ...newMember,
                    dateAdhesion: new Date().toISOString().split('T')[0]
                }]);
            setNewMember({ nom: '', prenom: '', dateNaissance: '', lieuNaissance: '', cin: '', adresse: '', telephone: '', email: '', role: 'Membre' });
            setShowAddMember(false);
        }
    };
    const generateStatutsPDF = () => {
        // Ici vous ajouteriez la logique pour générer le PDF des statuts
        alert('Génération du PDF des statuts en cours...');
    };
    if (!isLoggedIn) {
        return (_jsx("div", { className: "min-h-screen bg-neutral-100 flex items-center justify-center", children: _jsx("div", { className: "max-w-md w-full mx-4", children: _jsxs("div", { className: "card", children: [_jsxs("div", { className: "text-center mb-8", children: [_jsx("div", { className: "w-16 h-16 bg-primary-500 rounded-xl flex items-center justify-center mx-auto mb-4", children: _jsx(User, { className: "w-8 h-8 text-neutral-50" }) }), _jsx("h2", { className: "text-2xl font-bold text-neutral-900 mb-2", children: "Connexion GIE" }), _jsx("p", { className: "text-neutral-600", children: "Acc\u00E9dez \u00E0 votre dashboard FEVEO 2050" })] }), _jsxs("form", { onSubmit: handleLogin, className: "space-y-6", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "ID du GIE *" }), _jsx("input", { type: "text", value: loginData.gieId, onChange: (e) => setLoginData(prev => ({ ...prev, gieId: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200", placeholder: "FEVEO-GIE-XXXX-YYYY", required: true })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Mot de passe *" }), _jsxs("div", { className: "relative", children: [_jsx("input", { type: showPassword ? 'text' : 'password', value: loginData.password, onChange: (e) => setLoginData(prev => ({ ...prev, password: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500 transition-colors duration-200 pr-12", placeholder: "Mot de passe", required: true }), _jsx("button", { type: "button", onClick: () => setShowPassword(!showPassword), className: "absolute right-3 top-1/2 transform -translate-y-1/2 text-neutral-400 hover:text-neutral-600", children: showPassword ? _jsx(EyeOff, { className: "w-5 h-5" }) : _jsx(Eye, { className: "w-5 h-5" }) })] })] }), _jsx("button", { type: "submit", className: "w-full btn-accent py-3", children: "Se connecter" })] }), _jsx("div", { className: "mt-6 text-center", children: _jsx("a", { href: "#", className: "text-sm text-accent-500 hover:text-accent-600", children: "Mot de passe oubli\u00E9 ?" }) })] }) }) }));
    }
    return (_jsxs("div", { className: "min-h-screen bg-neutral-100", children: [_jsx("header", { className: "bg-neutral-50 border-b border-neutral-200", children: _jsx("div", { className: "container-max section-padding", children: _jsxs("div", { className: "flex items-center justify-between h-16", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: "w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center", children: _jsx("span", { className: "text-neutral-50 font-bold", children: "F" }) }), _jsxs("div", { children: [_jsx("h1", { className: "text-lg font-bold text-neutral-900", children: "Dashboard GIE" }), _jsx("p", { className: "text-sm text-neutral-600", children: gieInfo.nom })] })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsxs("div", { className: "text-right", children: [_jsx("p", { className: "text-sm font-medium text-neutral-900", children: gieInfo.presidenteNom }), _jsx("p", { className: "text-xs text-neutral-500", children: "Pr\u00E9sidente" })] }), _jsx("button", { onClick: handleLogout, className: "p-2 text-neutral-600 hover:text-red-500 transition-colors duration-200", children: _jsx(LogOut, { className: "w-5 h-5" }) })] })] }) }) }), _jsx("div", { className: "container-max section-padding py-8", children: _jsxs("div", { className: "flex flex-col lg:flex-row gap-8", children: [_jsx("div", { className: "lg:w-64 flex-shrink-0", children: _jsx("div", { className: "card p-4", children: _jsx("nav", { className: "space-y-2", children: [
                                        { id: 'wallet', label: 'Wallet GIE', icon: Wallet },
                                        { id: 'products', label: 'Produits', icon: Package },
                                        { id: 'activities', label: 'Activités', icon: Activity },
                                        { id: 'members', label: 'Membres', icon: Users },
                                        { id: 'settings', label: 'Paramètres', icon: Settings }
                                    ].map((item) => (_jsxs("button", { onClick: () => setActiveTab(item.id), className: `w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors duration-200 ${activeTab === item.id
                                            ? 'bg-accent-500 text-neutral-50'
                                            : 'text-neutral-600 hover:bg-neutral-100'}`, children: [_jsx(item.icon, { className: "w-5 h-5" }), _jsx("span", { className: "font-medium", children: item.label })] }, item.id))) }) }) }), _jsxs("div", { className: "flex-1", children: [activeTab === 'wallet' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900", children: "Wallet GIE" }), _jsxs("div", { className: "text-sm text-neutral-500", children: ["Derni\u00E8re mise \u00E0 jour: ", walletData.derniereTransaction] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsx("div", { className: "card bg-primary-500 text-neutral-50", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm opacity-80", children: "Solde Total" }), _jsxs("p", { className: "text-2xl font-bold", children: [walletData.solde.toLocaleString(), " FCFA"] })] }), _jsx(Wallet, { className: "w-8 h-8 opacity-80" })] }) }), _jsx("div", { className: "card bg-success-500 text-neutral-50", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm opacity-80", children: "Parts Investies" }), _jsx("p", { className: "text-2xl font-bold", children: walletData.partsInvesties })] }), _jsx(CreditCard, { className: "w-8 h-8 opacity-80" })] }) }), _jsx("div", { className: "card bg-accent-500 text-neutral-50", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm opacity-80", children: "Rendement" }), _jsxs("p", { className: "text-2xl font-bold", children: [walletData.rendement, "%"] })] }), _jsx(TrendingUp, { className: "w-8 h-8 opacity-80" })] }) })] }), _jsxs("div", { className: "card", children: [_jsx("h3", { className: "text-lg font-bold text-neutral-900 mb-4", children: "Derni\u00E8res Transactions" }), _jsx("div", { className: "space-y-3", children: walletData.transactions.map((transaction) => (_jsxs("div", { className: "flex items-center justify-between p-3 bg-neutral-100 rounded-lg", children: [_jsxs("div", { children: [_jsx("p", { className: "font-medium text-neutral-900", children: transaction.description }), _jsx("p", { className: "text-sm text-neutral-500", children: transaction.date })] }), _jsxs("div", { className: `font-bold ${transaction.type === 'Crédit' ? 'text-success-600' : 'text-red-600'}`, children: [transaction.type === 'Crédit' ? '+' : '-', transaction.montant.toLocaleString(), " FCFA"] })] }, transaction.id))) })] })] })), activeTab === 'products' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900", children: "Gestion des Produits" }), _jsxs("button", { onClick: () => setShowAddProduct(true), className: "btn-accent flex items-center space-x-2", children: [_jsx(Plus, { className: "w-5 h-5" }), _jsx("span", { children: "Ajouter Produit" })] })] }), _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: products.map((product) => (_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsx("h3", { className: "font-bold text-neutral-900", children: product.nom }), _jsxs("div", { className: "flex space-x-2", children: [_jsx("button", { className: "p-1 text-neutral-400 hover:text-accent-500", children: _jsx(Edit, { className: "w-4 h-4" }) }), _jsx("button", { className: "p-1 text-neutral-400 hover:text-red-500", children: _jsx(Trash2, { className: "w-4 h-4" }) })] })] }), _jsxs("div", { className: "space-y-2 text-sm", children: [_jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-neutral-600", children: "Prix:" }), _jsxs("span", { className: "font-medium", children: [product.prix.toLocaleString(), " FCFA"] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-neutral-600", children: "Stock:" }), _jsxs("span", { className: "font-medium", children: [product.stock, " unit\u00E9s"] })] }), _jsxs("div", { className: "flex justify-between", children: [_jsx("span", { className: "text-neutral-600", children: "Cat\u00E9gorie:" }), _jsx("span", { className: "font-medium", children: product.categorie })] })] }), _jsx("div", { className: "mt-4 pt-4 border-t border-neutral-200", children: _jsxs("button", { className: "w-full btn-secondary text-sm py-2", children: [_jsx(ShoppingCart, { className: "w-4 h-4 mr-2" }), "G\u00E9rer les ventes"] }) })] }, product.id))) })] })), activeTab === 'activities' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900", children: "Activit\u00E9s du GIE" }), _jsxs("button", { onClick: () => setShowAddActivity(true), className: "btn-accent flex items-center space-x-2", children: [_jsx(Plus, { className: "w-5 h-5" }), _jsx("span", { children: "Nouvelle Activit\u00E9" })] })] }), _jsx("div", { className: "space-y-4", children: activities.map((activity) => (_jsx("div", { className: "card", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-3 mb-2", children: [_jsx("h3", { className: "font-bold text-neutral-900", children: activity.titre }), _jsx("span", { className: `px-2 py-1 rounded-full text-xs font-medium ${activity.statut === 'Terminée'
                                                                                ? 'bg-success-100 text-success-600'
                                                                                : activity.statut === 'En cours'
                                                                                    ? 'bg-accent-100 text-accent-600'
                                                                                    : 'bg-neutral-100 text-neutral-600'}`, children: activity.statut })] }), _jsx("p", { className: "text-neutral-600 mb-2", children: activity.description }), _jsxs("div", { className: "flex items-center text-sm text-neutral-500", children: [_jsx(Calendar, { className: "w-4 h-4 mr-1" }), activity.date] })] }), _jsxs("div", { className: "flex space-x-2", children: [_jsx("button", { className: "p-2 text-neutral-400 hover:text-accent-500", children: _jsx(Edit, { className: "w-4 h-4" }) }), _jsx("button", { className: "p-2 text-neutral-400 hover:text-red-500", children: _jsx(Trash2, { className: "w-4 h-4" }) })] })] }) }, activity.id))) })] })), activeTab === 'members' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900", children: "Gestion des Membres" }), _jsxs("div", { className: "flex space-x-3", children: [_jsxs("button", { onClick: () => setShowStatutsForm(true), className: "btn-secondary flex items-center space-x-2", children: [_jsx(FileText, { className: "w-5 h-5" }), _jsx("span", { children: "Statuts GIE" })] }), _jsxs("button", { onClick: () => setShowAddMember(true), className: "btn-accent flex items-center space-x-2", children: [_jsx(Plus, { className: "w-5 h-5" }), _jsx("span", { children: "Ajouter Membre" })] })] })] }), _jsx("div", { className: "card", children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full", children: [_jsx("thead", { children: _jsxs("tr", { className: "border-b border-neutral-200", children: [_jsx("th", { className: "text-left py-3 px-4 font-medium text-neutral-700", children: "Nom" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-neutral-700", children: "R\u00F4le" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-neutral-700", children: "Contact" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-neutral-700", children: "Adh\u00E9sion" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-neutral-700", children: "Actions" })] }) }), _jsx("tbody", { children: members.map((member) => (_jsxs("tr", { className: "border-b border-neutral-100", children: [_jsx("td", { className: "py-3 px-4", children: _jsx("div", { className: "font-medium text-neutral-900", children: member.nom }) }), _jsx("td", { className: "py-3 px-4", children: _jsx("span", { className: `px-2 py-1 rounded-full text-xs font-medium ${member.role === 'Présidente'
                                                                                ? 'bg-primary-100 text-primary-600'
                                                                                : member.role === 'Secrétaire'
                                                                                    ? 'bg-accent-100 text-accent-600'
                                                                                    : 'bg-neutral-100 text-neutral-600'}`, children: member.role }) }), _jsx("td", { className: "py-3 px-4", children: _jsxs("div", { className: "text-sm text-neutral-600", children: [_jsxs("div", { className: "flex items-center", children: [_jsx(Phone, { className: "w-3 h-3 mr-1" }), member.telephone] }), member.email && (_jsxs("div", { className: "flex items-center mt-1", children: [_jsx(Mail, { className: "w-3 h-3 mr-1" }), member.email] }))] }) }), _jsx("td", { className: "py-3 px-4 text-sm text-neutral-600", children: member.dateAdhesion }), _jsx("td", { className: "py-3 px-4", children: _jsxs("div", { className: "flex space-x-2", children: [_jsx("button", { className: "p-1 text-neutral-400 hover:text-accent-500", children: _jsx(Edit, { className: "w-4 h-4" }) }), _jsx("button", { className: "p-1 text-neutral-400 hover:text-red-500", children: _jsx(Trash2, { className: "w-4 h-4" }) })] }) })] }, member.id))) })] }) }) })] })), activeTab === 'settings' && (_jsxs("div", { className: "space-y-6", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900", children: "Param\u00E8tres du GIE" }), _jsxs("div", { className: "card", children: [_jsx("h3", { className: "text-lg font-bold text-neutral-900 mb-4", children: "Informations G\u00E9n\u00E9rales" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "ID du GIE" }), _jsx("input", { type: "text", value: gieInfo.id, disabled: true, className: "w-full px-4 py-3 border border-neutral-300 rounded-lg bg-neutral-100 text-neutral-500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Nom du GIE" }), _jsx("input", { type: "text", value: gieInfo.nom, onChange: (e) => setGieInfo(prev => ({ ...prev, nom: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "R\u00E9gion" }), _jsx("input", { type: "text", value: gieInfo.region, onChange: (e) => setGieInfo(prev => ({ ...prev, region: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Commune" }), _jsx("input", { type: "text", value: gieInfo.commune, onChange: (e) => setGieInfo(prev => ({ ...prev, commune: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500" })] })] }), _jsx("div", { className: "mt-6", children: _jsxs("button", { className: "btn-accent", children: [_jsx(Save, { className: "w-5 h-5 mr-2" }), "Sauvegarder"] }) })] })] }))] })] }) }), showAddProduct && (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center bg-neutral-900/50 backdrop-blur-sm", children: _jsxs("div", { className: "bg-neutral-50 rounded-xl p-6 w-full max-w-md mx-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-bold text-neutral-900", children: "Ajouter un Produit" }), _jsx("button", { onClick: () => setShowAddProduct(false), className: "text-neutral-400 hover:text-neutral-600", children: _jsx(X, { className: "w-6 h-6" }) })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Nom du produit *" }), _jsx("input", { type: "text", value: newProduct.nom, onChange: (e) => setNewProduct(prev => ({ ...prev, nom: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Ex: Tomates Bio" })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Prix (FCFA) *" }), _jsx("input", { type: "number", value: newProduct.prix, onChange: (e) => setNewProduct(prev => ({ ...prev, prix: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "1500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Stock *" }), _jsx("input", { type: "number", value: newProduct.stock, onChange: (e) => setNewProduct(prev => ({ ...prev, stock: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "100" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Cat\u00E9gorie" }), _jsxs("select", { value: newProduct.categorie, onChange: (e) => setNewProduct(prev => ({ ...prev, categorie: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", children: [_jsx("option", { value: "", children: "S\u00E9lectionner une cat\u00E9gorie" }), _jsx("option", { value: "L\u00E9gumes", children: "L\u00E9gumes" }), _jsx("option", { value: "Fruits", children: "Fruits" }), _jsx("option", { value: "C\u00E9r\u00E9ales", children: "C\u00E9r\u00E9ales" }), _jsx("option", { value: "Transformation", children: "Transformation" }), _jsx("option", { value: "Artisanat", children: "Artisanat" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Description" }), _jsx("textarea", { rows: 3, value: newProduct.description, onChange: (e) => setNewProduct(prev => ({ ...prev, description: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Description du produit..." })] })] }), _jsxs("div", { className: "flex justify-end space-x-3 mt-6", children: [_jsx("button", { onClick: () => setShowAddProduct(false), className: "btn-secondary", children: "Annuler" }), _jsx("button", { onClick: handleAddProduct, className: "btn-accent", children: "Ajouter" })] })] }) })), showAddActivity && (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center bg-neutral-900/50 backdrop-blur-sm", children: _jsxs("div", { className: "bg-neutral-50 rounded-xl p-6 w-full max-w-md mx-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-bold text-neutral-900", children: "Nouvelle Activit\u00E9" }), _jsx("button", { onClick: () => setShowAddActivity(false), className: "text-neutral-400 hover:text-neutral-600", children: _jsx(X, { className: "w-6 h-6" }) })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Titre de l'activit\u00E9 *" }), _jsx("input", { type: "text", value: newActivity.titre, onChange: (e) => setNewActivity(prev => ({ ...prev, titre: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Ex: Formation compostage" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Date *" }), _jsx("input", { type: "date", value: newActivity.date, onChange: (e) => setNewActivity(prev => ({ ...prev, date: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Lieu" }), _jsx("input", { type: "text", value: newActivity.lieu, onChange: (e) => setNewActivity(prev => ({ ...prev, lieu: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Lieu de l'activit\u00E9" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Description" }), _jsx("textarea", { rows: 3, value: newActivity.description, onChange: (e) => setNewActivity(prev => ({ ...prev, description: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Description de l'activit\u00E9..." })] })] }), _jsxs("div", { className: "flex justify-end space-x-3 mt-6", children: [_jsx("button", { onClick: () => setShowAddActivity(false), className: "btn-secondary", children: "Annuler" }), _jsx("button", { onClick: handleAddActivity, className: "btn-accent", children: "Ajouter" })] })] }) })), showAddMember && (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center bg-neutral-900/50 backdrop-blur-sm", children: _jsxs("div", { className: "bg-neutral-50 rounded-xl p-6 w-full max-w-2xl mx-4 max-h-[90vh] overflow-y-auto", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-bold text-neutral-900", children: "Ajouter un Membre" }), _jsx("button", { onClick: () => setShowAddMember(false), className: "text-neutral-400 hover:text-neutral-600", children: _jsx(X, { className: "w-6 h-6" }) })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Pr\u00E9nom *" }), _jsx("input", { type: "text", value: newMember.prenom, onChange: (e) => setNewMember(prev => ({ ...prev, prenom: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Pr\u00E9nom" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Nom *" }), _jsx("input", { type: "text", value: newMember.nom, onChange: (e) => setNewMember(prev => ({ ...prev, nom: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Nom de famille" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Date de naissance" }), _jsx("input", { type: "date", value: newMember.dateNaissance, onChange: (e) => setNewMember(prev => ({ ...prev, dateNaissance: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Lieu de naissance" }), _jsx("input", { type: "text", value: newMember.lieuNaissance, onChange: (e) => setNewMember(prev => ({ ...prev, lieuNaissance: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Lieu de naissance" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Num\u00E9ro CIN" }), _jsx("input", { type: "text", value: newMember.cin, onChange: (e) => setNewMember(prev => ({ ...prev, cin: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Num\u00E9ro CIN" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "T\u00E9l\u00E9phone *" }), _jsx("input", { type: "tel", value: newMember.telephone, onChange: (e) => setNewMember(prev => ({ ...prev, telephone: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "+221 XX XXX XX XX" })] }), _jsxs("div", { className: "md:col-span-2", children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Email" }), _jsx("input", { type: "email", value: newMember.email, onChange: (e) => setNewMember(prev => ({ ...prev, email: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "email@exemple.com" })] }), _jsxs("div", { className: "md:col-span-2", children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Adresse" }), _jsx("textarea", { rows: 2, value: newMember.adresse, onChange: (e) => setNewMember(prev => ({ ...prev, adresse: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Adresse compl\u00E8te" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "R\u00F4le" }), _jsxs("select", { value: newMember.role, onChange: (e) => setNewMember(prev => ({ ...prev, role: e.target.value })), className: "w-full px-4 py-3 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", children: [_jsx("option", { value: "Membre", children: "Membre" }), _jsx("option", { value: "Secr\u00E9taire", children: "Secr\u00E9taire" }), _jsx("option", { value: "Tr\u00E9sori\u00E8re", children: "Tr\u00E9sori\u00E8re" }), _jsx("option", { value: "Commissaire aux comptes", children: "Commissaire aux comptes" })] })] })] }), _jsxs("div", { className: "flex justify-end space-x-3 mt-6", children: [_jsx("button", { onClick: () => setShowAddMember(false), className: "btn-secondary", children: "Annuler" }), _jsx("button", { onClick: handleAddMember, className: "btn-accent", children: "Ajouter" })] })] }) })), showStatutsForm && (_jsx("div", { className: "fixed inset-0 z-50 flex items-center justify-center bg-neutral-900/50 backdrop-blur-sm", children: _jsxs("div", { className: "bg-neutral-50 rounded-xl p-6 w-full max-w-6xl mx-4 max-h-[90vh] overflow-y-auto", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-bold text-neutral-900", children: "Statuts du Groupement d'Int\u00E9r\u00EAt \u00C9conomique" }), _jsx("button", { onClick: () => setShowStatutsForm(false), className: "text-neutral-400 hover:text-neutral-600", children: _jsx(X, { className: "w-6 h-6" }) })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "text-center", children: [_jsx("h2", { className: "text-2xl font-bold text-neutral-900 mb-4", children: "STATUT D'UN GROUPEMENT D'INTERET ECONOMIQUE" }), _jsxs("div", { className: "flex items-center justify-center space-x-4 mb-4", children: [_jsx("span", { children: "Aujourd'hui," }), _jsx("input", { type: "date", value: statutsData.date, onChange: (e) => setStatutsData(prev => ({ ...prev, date: e.target.value })), className: "px-3 py-1 border border-neutral-300 rounded" })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "Dans la r\u00E9gion de :" }), _jsx("input", { type: "text", value: statutsData.region, onChange: (e) => setStatutsData(prev => ({ ...prev, region: e.target.value })), className: "w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "R\u00E9gion" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "d\u00E9partement de :" }), _jsx("input", { type: "text", value: statutsData.departement, onChange: (e) => setStatutsData(prev => ({ ...prev, departement: e.target.value })), className: "w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "D\u00E9partement" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "arrondissement de :" }), _jsx("input", { type: "text", value: statutsData.arrondissement, onChange: (e) => setStatutsData(prev => ({ ...prev, arrondissement: e.target.value })), className: "w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Arrondissement" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-neutral-700 mb-2", children: "commune de :" }), _jsx("input", { type: "text", value: statutsData.commune, onChange: (e) => setStatutsData(prev => ({ ...prev, commune: e.target.value })), className: "w-full px-3 py-2 border border-neutral-300 rounded-lg focus:ring-2 focus:ring-accent-500 focus:border-accent-500", placeholder: "Commune" })] })] }), _jsxs("div", { children: [_jsx("h4", { className: "text-lg font-bold text-neutral-900 mb-4", children: "Les soussign\u00E9s," }), _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full border border-neutral-300", children: [_jsx("thead", { children: _jsxs("tr", { className: "bg-neutral-100", children: [_jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "N\u00B0" }), _jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "Pr\u00E9noms & Noms" }), _jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "Date et lieu de naissance" }), _jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "CIN N\u00B0" }), _jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "Adresse" }), _jsx("th", { className: "border border-neutral-300 px-2 py-2 text-xs font-medium", children: "Signature" })] }) }), _jsx("tbody", { children: statutsData.membres.map((membre, index) => (_jsxs("tr", { children: [_jsx("td", { className: "border border-neutral-300 px-2 py-1 text-center text-sm", children: String(index + 1).padStart(2, '0') }), _jsx("td", { className: "border border-neutral-300 px-2 py-1", children: _jsx("input", { type: "text", value: membre.prenomNom, onChange: (e) => {
                                                                            const newMembres = [...statutsData.membres];
                                                                            newMembres[index].prenomNom = e.target.value;
                                                                            setStatutsData(prev => ({ ...prev, membres: newMembres }));
                                                                        }, className: "w-full px-1 py-1 text-xs border-0 focus:ring-1 focus:ring-accent-500", placeholder: "Pr\u00E9nom et Nom" }) }), _jsx("td", { className: "border border-neutral-300 px-2 py-1", children: _jsx("input", { type: "text", value: membre.dateNaissance, onChange: (e) => {
                                                                            const newMembres = [...statutsData.membres];
                                                                            newMembres[index].dateNaissance = e.target.value;
                                                                            setStatutsData(prev => ({ ...prev, membres: newMembres }));
                                                                        }, className: "w-full px-1 py-1 text-xs border-0 focus:ring-1 focus:ring-accent-500", placeholder: "Date et lieu" }) }), _jsx("td", { className: "border border-neutral-300 px-2 py-1", children: _jsx("input", { type: "text", value: membre.cin, onChange: (e) => {
                                                                            const newMembres = [...statutsData.membres];
                                                                            newMembres[index].cin = e.target.value;
                                                                            setStatutsData(prev => ({ ...prev, membres: newMembres }));
                                                                        }, className: "w-full px-1 py-1 text-xs border-0 focus:ring-1 focus:ring-accent-500", placeholder: "N\u00B0 CIN" }) }), _jsx("td", { className: "border border-neutral-300 px-2 py-1", children: _jsx("input", { type: "text", value: membre.adresse, onChange: (e) => {
                                                                            const newMembres = [...statutsData.membres];
                                                                            newMembres[index].adresse = e.target.value;
                                                                            setStatutsData(prev => ({ ...prev, membres: newMembres }));
                                                                        }, className: "w-full px-1 py-1 text-xs border-0 focus:ring-1 focus:ring-accent-500", placeholder: "Adresse" }) }), _jsx("td", { className: "border border-neutral-300 px-2 py-1 text-center", children: _jsx("input", { type: "checkbox", checked: membre.signature, onChange: (e) => {
                                                                            const newMembres = [...statutsData.membres];
                                                                            newMembres[index].signature = e.target.checked;
                                                                            setStatutsData(prev => ({ ...prev, membres: newMembres }));
                                                                        }, className: "w-4 h-4 text-accent-500 focus:ring-accent-500 border-neutral-300 rounded" }) })] }, index))) })] }) })] }), _jsxs("div", { className: "space-y-4 text-sm", children: [_jsx("p", { className: "font-medium", children: "Ont \u00E9tabli ainsi les statuts d'un GROUPEMENT D'INTERET ECONOMIQUE qu'elles(qu'ils) proposent de constituer." }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { children: [_jsx("h5", { className: "font-bold", children: "ARTICLE 1- FORME :" }), _jsx("p", { children: "Il est form\u00E9 entre les soussign\u00E9s, un GROUPEMENT D'INTERET ECONOMIQUE qui sera r\u00E9gi par les lois en vigueur et par les pr\u00E9sents statuts." })] }), _jsxs("div", { children: [_jsx("h5", { className: "font-bold", children: "ARTICLE 2- OBJET :" }), _jsx("p", { children: "Le GROUPEMENT D'INTERET ECONOMIQUE a pour objet :" }), _jsxs("ul", { className: "list-disc list-inside ml-4 space-y-1", children: [_jsx("li", { children: "prestation de services en qualit\u00E9 de distributeur de Fintech de \u00AB FEVEO DIGITAL FINANCE \u00BB et produits d\u00E9riv\u00E9s" }), _jsx("li", { children: "commerce et distribution de produits agroalimentaires et autres en d\u00E9tail, au niveau territorial (affili\u00E9 de la grande distribution \u00AB AVEC FEVEO DISTRIBUTION \u00BB)" }), _jsx("li", { children: "exploitation des ressources du secteur primaire" }), _jsx("li", { children: "transformation des ressources du secteur primaire et/ou secondaire" }), _jsx("li", { children: "multiservices" }), _jsx("li", { children: "restauration et services traiteur" }), _jsx("li", { children: "cadre de vie" }), _jsx("li", { children: "divers" })] })] }), _jsxs("div", { children: [_jsx("h5", { className: "font-bold", children: "ARTICLE 3- DENOMINATION SOCIALE :" }), _jsx("p", { children: "La d\u00E9nomination sociale du groupement est FEMMES VISION ECONOMIE ORGANIQUE +code r\u00E9gion+code d\u00E9partement+code arrondissement+code commune+n\u00B0de protocole d'adh\u00E9sion \u00E0 la plateforme FEVEO 2050 dans la commune \u00AB FEVEO \u2026\u2026\u2026\u2026.. \u00BB" }), _jsx("p", { children: "Dans tous les actes et documents \u00E9manant du groupement d'int\u00E9r\u00EAt Economique cette d\u00E9nomination devra toujours \u00EAtre mentionn\u00E9e suivie du mot \"Groupement d'Int\u00E9r\u00EAt Economique\" r\u00E9gi par l'Acte Uniforme OHADA relatif au droit des soci\u00E9t\u00E9s Commerciales et du Groupement d'int\u00E9r\u00EAt Economique." })] }), _jsxs("div", { children: [_jsx("h5", { className: "font-bold", children: "ARTICLE 6 \u2013 APPORTS :" }), _jsx("p", { children: "Chaque membre du GIE doit apporter la somme de 273 900 f.cfa (deux cent soixante-treize mille neuf cents) \u00E0 lib\u00E9rer par une somme minimale mensuelle de 4500 f au 05 de chaque mois jusqu'\u00E0 la lib\u00E9ration totale du montant, ne d\u00E9passant pas la date limite du 19 f\u00E9vrier 2030." })] }), _jsxs("div", { children: [_jsx("h5", { className: "font-bold", children: "ARTICLE 7 \u2013 CAPITAL SOCIAL :" }), _jsx("p", { children: "Le capital social : 10 956 000 F.CFA dont 60 000 (soixante mille francs) enti\u00E8rement lib\u00E9r\u00E9s \u00E0 la date de constitution (\u00E0 raison de 1 500 f.cfa par membre)" })] })] })] })] }), _jsxs("div", { className: "flex justify-end space-x-3 mt-8 pt-6 border-t border-neutral-200", children: [_jsx("button", { onClick: () => setShowStatutsForm(false), className: "btn-secondary", children: "Fermer" }), _jsxs("button", { onClick: generateStatutsPDF, className: "btn-accent flex items-center space-x-2", children: [_jsx(Download, { className: "w-5 h-5" }), _jsx("span", { children: "G\u00E9n\u00E9rer PDF" })] })] })] }) }))] }));
};
export default GIEDashboard;
//# sourceMappingURL=GIEDashboard.js.map